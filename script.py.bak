# @Author: schwarze_falke
# @Date:   2019-01-25T13:30:28-06:00
# @Last modified by:   schwarze_falke
# @Last modified time: 2019-02-18T14:48:09-06:00
import binascii
import json


# This function gives a string a defined format of the type "00:00:00"
# depending on the lenght [given by @top]. It returns a formatted string
def formatNetString(varString):
    finalString = ''
    for i in varString:
        finalString += i
        finalString += '.'
    return finalString[:-1]


def formatHexString(varString, top):
    finalString = ''
    a = 0
    b = 2
    while b != top:
        finalString += varString[a:b]
        a = b
        b += 2
        if(b != top):
            finalString += ':'
    return finalString


def dictionary():
    JSONfile = open('ip_protocol_numbers.json')
    JSONstr = JSONfile.read()
    JSONdata = json.loads(JSONstr)
    return JSONdata


def hex2bin(str):
    binary = ''
    for i in range(len(str) - 1):
        binstr = bin(int(str[i + 1], 16))[2:]
        binary += binstr
    return binary


# Main function
if __name__ == '__main__':

    readInput = raw_input('Ingrese el nombre del archivo a leer: ')
    fileStr = "packages/" + readInput + ".bin"
    with open(fileStr, 'rb') as content_file:
        file = content_file.read()
    # All file's data is read an process as hex
    hexString = binascii.hexlify(file).upper()
    print hexString
    # Testing part

    # End of testing part

    # The origin address has a lenght of 6 bytes
    # also the destination address; so, 6x2 = 12
    # The type information has a lenght of 2 bytes
    originAddress = formatHexString(hexString[0:12], 14)
    destinationAddress = formatHexString(hexString[12:24], 14)
    type = hexString[24:28]
    print "Direccion MAC de origen: ", originAddress
    print "Direccion MAC de destino: ", destinationAddress
    if type == '0800':
        print "Tipo: ", type, " (IPv4)"
        # IP has a lenght of 20 bytes
        ip = binascii.unhexlify(hexString[28:])
        print ip
        # ip = binString[321:]
        version = ip[0:4]
        header = ip[4:8]
        header = int(header, 2)
        service = ip[8:16]
        long = int(ip[16:32], 2)
        id = int(ip[32:48], 2)
        flags = ip[48:51]
        posFrag = int(ip[51:64], 2)
        ttl = int(ip[64:72], 2)
        protocol = int(ip[72:80], 2)
        controlHeader = int(ip[80:96], 2)
        originIP = int(ip[96:128], 2)
        destinyIP = int(ip[128:160], 2)

        if version == "0010":
            print "Version: IPv4"
            print "Cabecera: ", (header * 32), " bytes"
            if service[0:3] == "000":
                print "Servicio: ", service[0:3], "de rutina"
            elif service[0:3] == "001":
                print "Servicio: ", service[0:3], "Prioritario"
            elif service[0:3] == "010":
                print "Servicio: ", service[0:3], "Inmediato"
            elif service[0:3] == "011":
                print "Servicio: ", service[0:3], "Relampago"
            elif service[0:3] == "100":
                print "Servicio: ", service[0:3], "Invalidacion Relampago"
            elif service[0:3] == "101":
                print "Servicio: ", service[0:3], "Procesando Llamada critica \
                y de emergencia"
            elif service[0:3] == "110":
                print "Servicio: ", service[0:3], "Control de trabajo de \
                internet"
            elif service[0:3] == "111":
                print "Servicio: ", service[0:3], "Control de red"

            if service[4] == "0":
                print "Retardo: Normal (", service[4], ")"
            elif service[4] == "1":
                print "Retardo: Bajo (", service[4], ")"

            if service[5] == "0":
                print "Rendimiento: Normal (", service[5], ")"
            elif service[5] == "1":
                print "Rendimiento: Bajo (", service[5], ")"

            if service[6] == "0":
                print "Fiabilidad: Normal (", service[6], ")"
            elif service[6] == "1":
                print "Fiabilidad: Alta (", service[6], ")"

            print "Longitud: ", long
            print "Identificador: ", id

            print "Bandera 1: Reservado (", flags[0], ")"
            if flags[1] == "0":
                print "Bandera 2: Divisible (", flags[1], ")"
            elif flags[1] == "1":
                print "Bandera 2: No divisible DF (", flags[1], ")"

            if flags[2] == "0":
                print "Bandera 3: Ultimo fragmentado (", flags[2], ")"
            elif flags[2] == "1":
                print "Bandera 3: Fragmento intermedio (", flags[2], ")"

            print "Posicion del fragmento: ", posFrag
            print "Tiempo de vida (TTL): ", ttl
            print "Protocolo: ", (dictionary()[protocol])['Protocol'], " (", \
                protocol, ")"
            print "Suma de control de cabecera: ", controlHeader
            print "Direccion IP de origen: ", formatNetString(str(originIP))
            print "Direccion IP de origen: ", formatNetString(str(destinyIP))
        elif version == "0100":
            print "Version: IPv6"

    if type == '0806':
        # IP has a lenght of 20 bytes
        # TCP's lenght is 23
        ip = formatHexString(hexString[28:68], 42)
        tcp = formatHexString(hexString[68:114], 48)
        data = formatHexString(hexString[114:len(hexString)], (len(hexString)
                                                               - 112))
        print "IP: ", ip
        print "Tipo: ", type, " (ARP)"
        print "TCP: ", tcp
        print "Datos: ", data
    if type == '8035':
        # IP has a lenght of 20 bytes
        # TCP's lenght is 23
        ip = formatHexString(hexString[28:68], 42)
        tcp = formatHexString(hexString[68:114], 48)
        data = formatHexString(hexString[114:len(hexString)], (len(hexString)
                                                               - 112))
        print "Tipo: ", type, " (RARP)"
        print "IP: ", ip
        print "TCP: ", tcp
        print "Datos: ", data
    if type == '08DD':
        # IP has a lenght of 20 bytes
        # TCP's lenght is 23
        ip = formatHexString(hexString[28:68], 42)
        tcp = formatHexString(hexString[68:114], 48)
        data = formatHexString(hexString[114:len(hexString)], (len(hexString)
                                                               - 112))
        print "Tipo: ", type, " (IPv6)"
        print "IP: ", ip
        print "TCP: ", tcp
        print "Datos: ", data
